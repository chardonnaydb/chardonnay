name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      name: Check out the repository code

    # TODO: Might need to wait a bit until Cassandra becomes ready.
    - name: Set up Docker Container
      run: docker run -d -p 9042:9042 --name cassandra cassandra:5.0

    - name: Install flatbuffers
      run: scripts/linux_install_flatbuffers.sh

    - name: Install protobuf
      run: sudo apt install -y protobuf-compiler

    - name: Install cqlsh
      run: pip install cqlsh

    - name: Build
      run: cargo build

    - name: Create keyspace
      run: |
        cqlsh -f schema/cassandra/chardonnay/keyspace.cql
        cqlsh -k chardonnay -f schema/cassandra/chardonnay/schema.cql

    - name: Run tests
      run: cargo test

  build-docker-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: rangeserver
            tags: chardonnay-rangeserver:latest
          - target: warden
            tags: chardonnay-warden:latest
          - target: epoch_publisher
            tags: chardonnay-epoch-publisher:latest
          - target: epoch
            tags: chardonnay-epoch:latest
          - target: universe
            tags: chardonnay-universe:latest

    steps:
    - uses: actions/checkout@v3
      name: Check out the repository code

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker images
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        target: ${{ matrix.target }}
        tags: ${{ matrix.tags }}
        push: false

  # TODO: Add an action to test deploying Chardonnay on a minikube cluster

  deploy-minikube:
    runs-on: ubuntu-latest
    needs: [build-docker-images]
    steps:
    - uses: actions/checkout@v3
      name: Check out the repository code

    - name: Start minikube
      uses: medyagh/setup-minikube@master

    - name: Build images in minikube
      run: |
        eval $(minikube docker-env)
        docker build -t chardonnay-rangeserver:latest --target rangeserver .
        docker build -t chardonnay-warden:latest --target warden .
        docker build -t chardonnay-epoch-publisher:latest --target epoch_publisher .
        docker build -t chardonnay-epoch:latest --target epoch .
        docker build -t chardonnay-universe:latest --target universe .

    - name: Deploy and verify Chardonnay
      run: |
        cd kubernetes && ./deploy.sh

    - name: Clean up
      if: always()
      run: minikube delete
