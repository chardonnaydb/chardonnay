namespace RangeServer;

table Uuidu128 {
  lower:uint64;
  upper:uint64;
}

table RangeId {
  keyspace_id:Uuidu128;
  range_id:Uuidu128;
}

table Key {
  k:[ubyte];
}

table Record {
    key:Key;
    value:[ubyte];
}

table GetRequest {
  request_id:Uuidu128;
  transaction_id:Uuidu128;
  range_id:RangeId;
  keys:[Key];
}

table GetResponse {
  request_id:Uuidu128;
  leader_sequence_number:int64;
  records:[Record];
}

table PrepareRequest {
  transaction_id:Uuidu128;
  range_id:RangeId;
  has_reads:bool;
  puts:[Record];
  deletes:[Key];
}

table CommitRequest {
    transaction_id:Uuidu128;
    range_id:RangeId;
    epoch:int64;
    vid:int64;
}

table AbortRequest {
    transaction_id:Uuidu128;
    range_id:RangeId;
}

enum Entry:byte { Prepare = 0, Commit, Abort = 2 }

table LogEntry {
  entry:Entry;
  bytes:[ubyte];
}

root_type LogEntry;